#include "imports/stdlib.fc";

() recv_internal(int msg_value, cell in_msg, slice in_msg_body) impure {
    slice cs = in_msg.begin_parse();  ;; cs = cell slice
    int flags = cs~load_uint(4);
    slice sender_address = cs~load_msg_addr();

    ;;; Sets `cell` [c] as persistent contract data. You can update persistent contract storage with this primitive.
    set_data(begin_cell().store_slice(sender_address).end_cell());
}

slice get_the_latest_sender() method_id {
    slice ds = get_data().begin_parse();
    return ds~load_msg_addr();
}
